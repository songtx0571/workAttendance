<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.howei.mapper.WagsMapper">
    <resultMap id="wagsMap" type="com.howei.pojo.Wages">
        <result column="id" property="id"></result>
        <result column="employeeId" property="employeeId"></result>
        <result column="basePay" property="basePay"></result>
        <result column="skillPay" property="skillPay"></result>
        <result column="positionSalary" property="positionSalary"></result>
        <result column="seniorityWage" property="seniorityWage"></result>
        <result column="other" property="other"></result>
        <result column="meritBase" property="meritBase"></result>
        <result column="meritPay" property="meritPay"></result>
        <result column="wageSubtotal" property="wageSubtotal"></result>
        <result column="performanceCoefficient" property="performanceCoefficient"></result>
        <result column="wagesPayable" property="wagesPayable"></result>
        <result column="totalPayable" property="totalPayable"></result>
        <result column="endowmentInsurance" property="endowmentInsurance"></result>
        <result column="unemploymentBenefits" property="unemploymentBenefits"></result>
        <result column="medicalInsurance" property="medicalInsurance"></result>
        <result column="accumulationFund" property="accumulationFund"></result>
        <result column="otherDeductions" property="otherDeductions"></result>
        <result column="unionFees" property="unionFees"></result>
        <result column="totalTax" property="totalTax"></result>
        <result column="totalDeduction" property="totalDeduction"></result>
        <result column="sixSpecialDeductions" property="sixSpecialDeductions"></result>
        <result column="individualTaxAdjustment" property="individualTaxAdjustment"></result>
        <result column="netSalary" property="netSalary"></result>
        <result column="remark" property="remark"></result>
        <result column="date" property="date"></result>
        <result column="created" property="created"></result>
        <result column="subTotalOfSubsidies" property="subTotalOfSubsidies"></result>
        <result column="wagesPostId" property="wagesPostId"></result>
        <result column="postGradeId" property="postGradeId"></result>
    </resultMap>

    <select id="getWagsList" parameterType="java.util.HashMap" resultType="com.howei.pojo.Wages">
        SELECT e.id employeeId,
        (
        CASE e.isChanged
        WHEN 0 THEN
        '正常'
        WHEN 1 THEN
        '当月入职'
        WHEN 2 THEN
        '当月离职'
        WHEN 3 THEN
        '试用期'
        WHEN 4 THEN
        '试用转正'
        WHEN 5 THEN
        '派遣调整'
        WHEN 6 THEN
        '部门调整'
        WHEN 7 THEN
        '薪酬调整'
        END
        ) isChanged,c.name departmentName, w.*, e.userNumber,e.name employeeName,e.laowupaiqian
        ,wp.name as wagesPostName,pg.gradeName as postGradeName
        FROM employee e
        LEFT JOIN (
        SELECT * FROM wages
        <if test="month!=null">
            WHERE
            date = #{month}
        </if>
        ) w ON e.id = w.employeeId
        LEFT JOIN users u ON u.employeeId = e.id
        LEFT JOIN company c on c.id=u.departmentId
        left join wagesPost wp on wp.id=w.wagesPostId
        left join postGrade pg on pg.id=w.postGradeId
        where u.state=1 and u.companyId=1
        <if test="empId!=null">
            and FIND_IN_SET(e.id,#{empId})
        </if>
        order by e.laowupaiqian desc
    </select>

    <insert id="copyToThisMonthWags" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into wages
        (employeeId,basePay,skillPay,positionSalary,seniorityWage,other,meritPay,wageSubtotal,performanceCoefficient,wagesPayable,subTotalOfSubsidies,
        totalPayable,endowmentInsurance,unemploymentBenefits,medicalInsurance,accumulationFund,otherDeductions,unionFees,totalTax,totalDeduction,sixSpecialDeductions,individualTaxAdjustment,netSalary,remark,`date`,created,
        wagesPostId,postGradeId)
        values
        <foreach collection="list" item="item" separator="," index="index">
            (#{item.employeeId},#{item.basePay},#{item.skillPay},#{item.positionSalary},#{item.seniorityWage},#{item.other},#{item.meritPay}
            ,#{item.wageSubtotal},#{item.performanceCoefficient},#{item.wagesPayable},#{item.subTotalOfSubsidies},#{item.totalPayable},#{item.endowmentInsurance}
            ,#{item.unemploymentBenefits},#{item.medicalInsurance},#{item.accumulationFund},#{item.otherDeductions},#{item.unionFees},#{item.totalTax}
            ,#{item.totalDeduction},#{item.sixSpecialDeductions},#{item.individualTaxAdjustment},#{item.netSalary},#{item.remark},#{item.date},#{item.created},#{item.wagesPostId},#{item.postGradeId})
        </foreach>
    </insert>

    <insert id="addThisMonthWags" parameterType="com.howei.pojo.Wages" useGeneratedKeys="true" keyProperty="id">
        insert into wages (employeeId,basePay,skillPay,positionSalary,seniorityWage,other,meritPay,wageSubtotal,performanceCoefficient,wagesPayable,subTotalOfSubsidies,
        totalPayable,endowmentInsurance,unemploymentBenefits,medicalInsurance,accumulationFund,otherDeductions,unionFees,totalTax,totalDeduction,sixSpecialDeductions,individualTaxAdjustment,netSalary,remark,`date`,created,
        wagesPostId,postGradeId,meritBase)
        values
        (#{wages.employeeId},#{wages.basePay},#{wages.skillPay},#{wages.positionSalary},#{wages.seniorityWage},#{wages.other},#{wages.meritPay}
        ,#{wages.wageSubtotal},#{wages.performanceCoefficient},#{wages.wagesPayable},#{wages.subTotalOfSubsidies},#{wages.totalPayable},#{wages.endowmentInsurance}
        ,#{wages.unemploymentBenefits},#{wages.medicalInsurance},#{wages.accumulationFund},#{wages.otherDeductions},#{wages.unionFees},#{wages.totalTax}
        ,#{wages.totalDeduction},#{wages.sixSpecialDeductions},#{wages.individualTaxAdjustment},#{wages.netSalary},#{wages.remark},#{wages.date},#{wages.created},#{wages.wagesPostId},#{wages.postGradeId},#{wages.meritBase})
    </insert>

    <update id="updWags" keyProperty="id" useGeneratedKeys="true" parameterType="com.howei.pojo.Wages">
        update wages
        <set>
            <if test="basePay!=null">
                basePay=#{basePay},
            </if>
            <if test="skillPay!=null">
                skillPay=#{skillPay},
            </if>
            <if test="positionSalary!=null">
                positionSalary=#{positionSalary},
            </if>
            <if test="seniorityWage!=null">
                seniorityWage=#{seniorityWage},
            </if>
            <if test="meritPay!=null">
                meritPay=#{meritPay},
            </if>
            <if test="endowmentInsurance!=null">
                endowmentInsurance=#{endowmentInsurance},
            </if>
            <if test="medicalInsurance!=null">
                medicalInsurance=#{medicalInsurance},
            </if>
            <if test="accumulationFund!=null">
                accumulationFund=#{accumulationFund},
            </if>
            <if test="unemploymentBenefits!=null">
                unemploymentBenefits=#{unemploymentBenefits},
            </if>
            <if test="unionFees!=null">
                unionFees=#{unionFees},
            </if>
            <if test="other!=null">
                other=#{other},
            </if>
            <if test="wageSubtotal!=null">
                wageSubtotal=#{wageSubtotal},
            </if>
            <if test="performanceCoefficient!=null">
                performanceCoefficient=#{performanceCoefficient},
            </if>
            <if test="wagesPayable!=null">
                wagesPayable=#{wagesPayable},
            </if>
            <if test="foodSupplement!=null">
                foodSupplement=#{foodSupplement},
            </if>
            <if test="totalPayable!=null">
                totalPayable=#{totalPayable},
            </if>
            <if test="otherDeductions!=null">
                otherDeductions=#{otherDeductions},
            </if>
            <if test="totalDeduction!=null">
                totalDeduction=#{totalDeduction},
            </if>
            <if test="totalTax!=null">
                totalTax=#{totalTax},
            </if>
            <if test="sixSpecialDeductions!=null">
                sixSpecialDeductions=#{sixSpecialDeductions},
            </if>
            <if test="individualTaxAdjustment!=null">
                individualTaxAdjustment=#{individualTaxAdjustment},
            </if>
            <if test="netSalary!=null">
                netSalary=#{netSalary},
            </if>
            <if test="highTemperatureSubsidy!=null">
                highTemperatureSubsidy=#{highTemperatureSubsidy},
            </if>
            <if test="remark!=null and remark!=''">
                remark=#{remark},
            </if>
            <if test="subTotalOfSubsidies!=null">
                subTotalOfSubsidies=#{subTotalOfSubsidies},
            </if>
            <if test="wagesPostId!=null">
                wagesPostId=#{wagesPostId},
            </if>
            <if test="postGradeId!=null">
                postGradeId=#{postGradeId},
            </if>
            <if test="meritBase!=null">
                meritBase=#{meritBase},
            </if>
        </set>
        where 1=1 and id=#{id} and date=#{date}
    </update>

    <select id="getWagsListById" parameterType="java.lang.String" resultType="com.howei.pojo.Wages">
        select * from wages where id=#{id}
    </select>

    <select id="getWagesToTax" resultType="com.howei.pojo.Wages">
          select * from wages where DATE_FORMAT(`date`,'%Y-%m-%d')&lt;=DATE_FORMAT(#{month},'%Y-%m-%d') and employeeId=#{employeeId} order by `date`
    </select>

</mapper>