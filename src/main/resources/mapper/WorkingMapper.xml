<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.howei.mapper.WorkingMapper">

    <resultMap id="workingMap" type="com.howei.pojo.OperatingHours">
        <result column="id" property="id"></result>
        <result column="scrdailyId" property="scrdailyId"></result>
        <result column="monthDay" property="monthDay"></result>
        <result column="tradersTime" property="tradersTime"></result>
        <result column="successorTime" property="successorTime"></result>
        <result column="projectId" property="projectId"></result>
        <result column="other" property="other"></result>
        <result column="employeeId" property="employeeId"></result>
    </resultMap>
    <resultMap id="overhaulMap" type="com.howei.pojo.OverhaulRecord">
        <result column="employeeId" property="employeeId"></result>
        <result column="userNumber" property="userNumber"></result>
        <result column="userName" property="userName"></result>
        <result column="finish_date_time" property="finishDateTime"></result>
        <result column="finish_year_month" property="finishYearMonth"></result>
        <result column="finish_day" property="finishDay"></result>
        <result column="working_hour" property="workingHour"></result>
        <result column="overtime" property="overtime"></result>
        <result column="type" property="type"></result>
        <result column="overhaul_no" property="overhaulNo"></result>
    </resultMap>
    <insert id="insertManagerHours">
        insert into
        managerHours(departmentId,employeeId,monthDay,workStartTime,type)
        value
        (#{departmentId},#{employeeId},#{monthDay},#{workStartTime},#{type})
    </insert>
    <insert id="insertWorkingHour" useGeneratedKeys="true" keyProperty="id">
        insert into
        workingHour( employeeId,userNumber,userName,month,type,workAttendance,workingHoursTotal,workingOvertimeTotal )
        values ( #{employeeId},#{userNumber},#{userName},#{month},#{type},#{workAttendance},#{workingHoursTotal},#{workingOvertimeTotal} )
    </insert>
    <update id="updateManagerHours">
        update managerHours
        <set>
            <if test="departmentId!=null">
                departmentId=#{departmentId},
            </if>
            <if test="employeeId!=null">
                employeeId=#{employeeId},
            </if>
            <if test="monthDay!=null">
                monthDay=#{monthDay},
            </if>
            <if test="workStartTime!=null">
                workStartTime=#{workStartTime},
            </if>
            <if test="workEndTime!=null">
                workEndTime=#{workEndTime},
            </if>
            <if test="workingHour!=null">
                workingHour=#{workingHour},
            </if>
            <if test="type!=null">
                type=#{type},
            </if>
        </set>
        where id =#{id}

    </update>
    <update id="updateWorkingHourById">
        update workingHour
        <set>
            <foreach collection="data" separator="," index="index" item="item">
                day${index}=#{item.total}
            </foreach>
        </set>
        where id = #{id}

    </update>

    <select id="getOperatingHoursList" parameterType="java.util.HashMap" resultMap="workingMap">
        select oh.id,oh.scrdailyId,oh.monthDay,oh.tradersTime,oh.successorTime,oh.projectId,oh.other,oh.employeeId
        ,oh.workingTime,e.name as employeeName,e.userNumber as employeeNumber
        from operatingHours oh
        left join employee e on e.id=oh.employeeId
        left join users u on u.employeeId =e.id
        <where>
            <if test="monthDay!=null and monthDay!=''">
                and date_format(oh.monthDay,'%Y-%m') = date_format(#{monthDay},'%Y-%m')
            </if>
            <if test="empIdStr!=null">
                and FIND_IN_SET(oh.employeeId,#{empIdStr})
            </if>
            <if test="projectId!=null">
                and u.departmentId=#{projectId}
            </if>
        </where>
        ORDER BY oh.monthDay
    </select>
    <select id="getMaintainRecordByMap" resultMap="overhaulMap">
        SELECT
        DISTINCT
        substring_index(
        substring_index(
        mr.employee_id,
        ',',
        b.help_topic_id + 1
        ),
        ',' ,- 1
        ) AS employeeId,
        u.userNumber userNumber,
        u.userName,
        mr.end_time finish_date_time,
        DATE_FORMAT(mr.end_time,"%Y-%m") finish_year_month,
        DATE_FORMAT(mr.end_time,"%d") finish_day,
        mr.working_hour,
        "0" as type,
        mr.maintain_record_no as overhaul_no
        FROM
        maintain_record mr
        JOIN mysql.help_topic b ON b.help_topic_id &lt; (
        length(mr.employee_id) - length(
        REPLACE (mr.employee_id, ',', '')
        ) + 1
        )
        JOIN users u ON u.employeeId = substring_index(
        substring_index(
        mr.employee_id,
        ',',
        b.help_topic_id + 1
        ),
        ',' ,- 1
        )
        WHERE
        mr.status='2'
        <if test="departmentId!=null">and mr.department_id=#{departmentId}</if>
        <if test="date!=null">
            and mr.end_time like concat("%",#{date},"%")
        </if>

        <if test="employeeIdList!=null">
            and
            <foreach collection="employeeIdList" item="employeeId" open="(" close=")" separator=" or">
                mr.employee_id like concat("%",#{employeeId},"%")
            </foreach>
        </if>
    </select>
    <select id="getDefectRecordByMap" resultMap="overhaulMap">
        SELECT
        DISTINCT
        substring_index(
        substring_index(
        de.empIds,
        ',',
        b.help_topic_id + 1
        ),
        ',' ,- 1
        ) AS employeeId,
        u.userNumber userNumber,
        u.userName,
        de.confirmer1Time finish_date_time,
        DATE_FORMAT(de.confirmer1Time,"%Y-%m") finish_year_month,
        DATE_FORMAT(de.confirmer1Time,"%d") finish_day,
        de.realExecuteTime working_hour,
        de.overtime,
        "1" as type,
        de.number as overhaul_no
        FROM
        defect de
        JOIN mysql.help_topic b ON b.help_topic_id &lt; (
        length(de.empIds) - length(
        REPLACE (de.empIds, ',', '')
        ) + 1
        )
        JOIN users u ON u.employeeId = substring_index(
        substring_index(
        de.empIds,
        ',',
        b.help_topic_id + 1
        ),
        ',' ,- 1
        )
        WHERE
        de.type=4
        <if test="departmentId!=null">and de.departmentId=#{departmentId}</if>
        <if test="date!=null">
            and de.confirmer1Time like concat("%",#{date},"%")
        </if>

        <if test="employeeIdList!=null">
            and
            <foreach collection="employeeIdList" item="employeeId" open="(" close=")" separator=" or">
                de.empIds like concat("%",#{employeeId},"%")
            </foreach>
        </if>

    </select>
    <select id="getMaintenceRecordByMap" resultMap="overhaulMap">
        SELECT
        DISTINCT
        u.employeeId employeeId,
        substring_index(
        substring_index(
        mr.people,
        ',',
        b.help_topic_id + 1
        ),
        ',' ,- 1
        ) AS userNumber,
        u.userName,
        mr.datetime finish_date_time,
        DATE_FORMAT(mr.datetime,"%Y-%m") finish_year_month,
        DATE_FORMAT(mr.datetime,"%d") finish_day,
        mr.workingHours working_hour,
        "2" as type
        FROM
        maintenanceRecord mr
        JOIN mysql.help_topic b ON b.help_topic_id &lt; (
        length(mr.people) - length(
        REPLACE (mr.people, ',', '')
        ) + 1
        )
        JOIN users u ON u.userNumber = substring_index(
        substring_index(
        mr.people,
        ',',
        b.help_topic_id + 1
        ),
        ',' ,- 1
        )
        where
        mr.type=1

        <if test="departmentId!=null">and u.departmentId=#{departmentId}</if>
        <if test="date!=null">
            and mr.datetime like concat("%",#{date},"%")
        </if>

        <if test="userNumberList!=null">
            and
            <foreach collection="userNumberList" item="userNumber" open="(" close=")" separator=" or">
                mr.people like concat("%",#{userNumber},"%")
            </foreach>
        </if>

    </select>
    <select id="getManagerHoursByMap" resultType="com.howei.pojo.ManagerHours">
        select * from managerHours
        <where>
            <if test="departmentId!=null">
                and departmentId=#{departmentId}
            </if>
            <if test="employeeId!=null">
                and employeeId=#{employeeId}
            </if>
            <if test="monthDay!=null">
                and monthDay=#{monthDay}
            </if>
            <if test="type!=null">
                and type=#{type}
            </if>
        </where>
    </select>
    <select id="getManagerHoursListByMap" resultType="com.howei.pojo.ManagerHours">
        select distinct
        u.employeeId,
        m.*, u.userName,
        u.userNumber
        FROM
        managerHours m
        RIGHT JOIN users u ON u.employeeId = m.employeeId
        JOIN user_role ur ON ur.userId = u.id
        JOIN role r ON r.id = ur.roleId
        JOIN role_authority ra ON ra.roleId = r.id
        JOIN authority a ON a.id = ra.authorityId
        <where>
            <if test="departmentId!=null">
                and u.departmentId=#{departmentId}
            </if>
            <if test="employeeId!=null">
                and m.employeeId=#{employeeId}
            </if>
            <if test="month!=null">
                and m.monthDay like concat(#{month},"%")
            </if>
            <if test="type!=null">
                and m.type=#{type}
            </if>
        </where>
    </select>
    <select id="getWorkingHourByMap" resultType="java.util.Map">
        select * from workingHour where date=#{date} and employeeId=#{employeeId}
    </select>

</mapper>