<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.howei.mapper.BehaviorMapper">
    <!--id,employeeId,week1,week2,week3,week4,period,remark,cycle,cycle2-->
    <select id="findAll" resultType="com.howei.pojo.Behavior">
        select * from behavior where employeeId=#{behavior.employeeId} and cycle=#{behavior.cycle}
    </select>

    <select id="findById" resultType="com.howei.pojo.Behavior">
        select * from behavior where id=#{param1}
    </select>

    <select id="selectAllCycle" resultType="java.lang.String">
        select DISTINCT cycle from behavior where cycle not in (select cycle  from performance)
          union all
        select DISTINCT cycle  from performance order by cycle desc
    </select>

    <select id="selectBeCycle" resultType="java.lang.String">
        SELECT DISTINCT cycle FROM behavior where employeeId=#{employeeId} ORDER BY cycle desc
    </select>

    <delete id="delete">
        delete from behavior where id=#{obj.Id}
    </delete>

    <insert id="insert">
        insert ignore into behavior (week1,week2,week3,week4,cycle,employeeId,period,jiaban,kaoqin,remark,sum)
        value (#{obj.week1},#{obj.week2},#{obj.week3},#{obj.week4},#{obj.cycle},#{obj.employeeId},#{obj.period},#{obj.jiaban},#{obj.kaoqin},#{obj.remark},#{obj.sum})
    </insert>
    <!--tiaoxiu=#{tiaoxiu},qingjia=#{qingjia},kuanggong=#{kuanggong},chidao=#{chidao},lunxiu=#{lunxiu},,zhiban=#{zhiban},chuchai=#{chuchai},-->
    <update id="update">
        update behavior
        <set>
            week1=#{week1},week2=#{week2},week3=#{week3},
            week4=#{week4},cycle=#{cycle},period=#{period},
            jiaban=#{jiaban},kaoqin=#{kaoqin},remark=#{remark},sum=#{sum},cycle2=concat(cycle,'-01')
        </set>
        where id=#{id}
    </update>

    <update id="updateSalary">
        replace into salary2(UserName,cycle,phoneAllowance,yanglao,shiye,yiliao,gongjijin,zhuanxiang,qitakouchu) values(#{obj.userName},#{obj.cycle},#{obj.phoneAllowance},#{obj.yanglao},#{obj.shiye},#{obj.yiliao},#{obj.gongjijin},#{obj.zhuanxiang},#{obj.qitakouchu})
    </update>

    <update id="updateSalaryCopy">
        update employee
        <set>
            phoneAllowance=#{obj.phoneAllowance},yanglao=#{obj.yanglao},shiye=#{obj.shiye},yiliao=#{obj.yiliao},gongjijin=#{obj.gongjijin},zhuanxiang=#{obj.zhuanxiang},qitakouchu=#{obj.qitakouchu}
        </set>
        where
        UserName=#{obj.userName}
    </update>



    <update id="updateCycle">
        update behavior
        <set>
            cycle=#{behavior.cycle},cycle2=concat(cycle,'-01')
        </set>
        where id=#{behavior.id}
    </update>

	<select id='getAssessment' parameterType="java.util.HashMap" resultType="com.howei.pojo.Assessment">
        SELECT b.id,b.name,b.userNumber,c.`name` department,b.laowupaiqian,a.jiaban,a.zhiban,a.kaoqin,a.sum score1,c.score score2,b.basicwages,b.meritpay
		FROM employee b
		left JOIN users u on u.userNumber=b.userNumber
		LEFT JOIN (SELECT employeeId,jiaban,zhiban,kaoqin,`sum` FROM behavior WHERE cycle = #{cycle}) a ON a.employeeId = b.id
		LEFT JOIN (SELECT employeeId,SUM(score) score FROM performance WHERE cycle = #{cycle} GROUP BY employeeId ) c ON c.employeeId = b.id
        LEFT JOIN company c ON u.departmentId = c.id
        <if test="empId!=null">
            where FIND_IN_SET(b.id,#{empId})
        </if>
		ORDER BY u.userNumber,u.departmentId,b.laowupaiqian,u.userName
        <if test="page!=null and pageSize!=null">
            limit ${page},${pageSize}
        </if>
	</select>

    <select id='getAssessmentBy' resultType="com.howei.pojo.Assessment">
		SELECT b.id,b.userName,b.name,d.departmentName department,b.laowupaiqian,b.phoneAllowance,a.jiaban,a.zhiban,a.kaoqin,a.sum score1,c.score score2,b.basicwages,b.meritpay
		FROM employee b
		LEFT JOIN (SELECT employeeId,jiaban,zhiban,kaoqin,`sum` FROM behavior WHERE cycle = #{cycle}) a ON a.employeeId = b.id
		LEFT JOIN (SELECT employeeId,SUM(score) score FROM performance WHERE cycle = #{cycle} GROUP BY employeeId ) c ON c.employeeId = b.id
		right join (SELECT a.id,a.UserName FROM employee a WHERE a.manager=#{manager}) f on b.id=f.id
		LEFT JOIN department d ON b.department = d.id WHERE d.type != 0
		ORDER BY b.department,laowupaiqian,userName
	</select>


	<select id='getAssessmentByUserName' resultType="com.howei.pojo.Assessment">
		SELECT b.id,b.userName,b.name,b.department,b.laowupaiqian,b.phoneAllowance,a.jiaban,a.zhiban,a.kaoqin,a.sum score1,c.score score2 FROM employee b
		LEFT JOIN (SELECT employeeId,jiaban,zhiban,kaoqin,`sum` FROM behavior WHERE cycle = #{cycle}) a ON a.employeeId = b.id
		LEFT JOIN (SELECT employeeId,SUM(score) score FROM performance WHERE cycle = #{cycle} GROUP BY employeeId ) c ON c.employeeId = b.id
		WHERE userName = #{userName}
	</select>
	
	<select id='getAssessmentByEmployeeId' resultType="com.howei.pojo.Assessment">
		SELECT b.id,b.name,b.name,c.`name`,b.laowupaiqian,a.jiaban,a.zhiban,a.kaoqin,a.sum score1,c.score score2 FROM employee b
		LEFT JOIN users u on u.employeeId=b.id
		LEFT JOIN company c on c.id=u.departmentId
		LEFT JOIN (SELECT employeeId,jiaban,zhiban,kaoqin,`sum` FROM behavior WHERE cycle = #{cycle}) a ON a.employeeId = b.id
		LEFT JOIN (SELECT employeeId,SUM(score) score FROM performance WHERE cycle = #{cycle} GROUP BY employeeId ) c ON c.employeeId = b.id
		WHERE b.id = #{employeeId}
	</select>
    <!--根据用户id月份查询分数为空的记录-->
    <select id="selscore">
        select * from behavior b where b.cycle=${param1} and b.${param2}=null
    </select>

    <update id="updateWeek">
        update behavior
        <set>
            week1=#{behavior.week1},week2=#{behavior.week2},week3=#{behavior.week3},week4=#{behavior.week4}
        </set>
        where id=#{behavior.id}
    </update>
</mapper>
