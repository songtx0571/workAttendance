<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.howei.mapper.PostperatorMapper">
    <resultMap id="postMap" type="com.howei.pojo.PostPerator">
        <result column="id" property="id"></result>
        <result column="postPeratorId" property="postPeratorId"></result>
        <result column="created" property="created"></result>
        <result column="updated" property="updated"></result>
        <result column="createdBy" property="createdBy"></result>
        <result column="updatedBy" property="updatedBy"></result>
        <result column="inspectionStaTime" property="inspectionStaTime"></result>
        <result column="inspectionEndTime" property="inspectionEndTime"></result>
        <result column="inspectionEndTheoryTime" property="inspectionEndTheoryTime"></result>
        <result column="peratorId" property="peratorId"></result>
        <result column="department" property="department"></result>
    </resultMap>

    <sql id="param">
        id,postPeratorId,created,createdBy,inspectionStaTime,inspectionEndTime,inspectionEndTheoryTime,peratorId
    </sql>

    <select id="getKPIList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT p.id AS id,p.userNumber,p.companyId,p.companyName,p.deparmentId,p.departmentName,p.userName AS userName,if(p.sex=1,"男","女") sex ,p.frequency AS frequency,pdd.point AS point
        FROM
        (
          SELECT u.id,u.userName,u.sex,u.userNumber,c.id companyId,c. NAME companyName,c2.id deparmentId,c2. NAME departmentName,COUNT(*) AS frequency
          FROM postPerator p
          JOIN users u ON u.Id = p.postPeratorId
          JOIN company c ON c.id = u.companyId
          JOIN company c2 ON c2.id = u.departmentId
          WHERE 1 = 1
          AND p.inspectionEndTime IS NOT NULL
          AND p.created like CONCAT( '%', #{startTime},'%')
          GROUP BY p.postPeratorId
        ) p
        JOIN (
          SELECT pd.createdBy AS createdBy,count(pd.postPeratorId) AS point
          FROM postPerator_data pd
          WHERE 1 = 1
          AND pd.measuringTypeData IS NOT NULL
          AND pd.created like CONCAT( '%', #{startTime},'%')
          GROUP BY pd.createdBy
        ) pdd ON pdd.createdBy = p.Id
        where 1=1
        <if test="empId!=null and empId!=''">
            and FIND_IN_SET(p.id,#{empId})
        </if>
        <if test="page!=null and pageSize!=null">
            limit ${page},${pageSize}
        </if>
    </select>

    <select id="getFrequencyList" parameterType="java.util.HashMap" resultMap="postMap">
        select
        <include refid="param"/>
        from postPerator
        where 1=1 and inspectionEndTime is not null
        <if test="postPeratorId!=null and postPeratorId!=''">
            and postPeratorId=#{postPeratorId}
        </if>
        <if test="startTime!=null and startTime!=''">
            and DATE_FORMAT(created,'%Y-%m')=#{startTime}
        </if>
        order by inspectionStaTime desc
        <if test="page!=null and pageSize!=null">
            limit ${page},${pageSize}
        </if>
    </select>
</mapper>